{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/color.manager.js","webpack:///./src/colors.list.js","webpack:///./src/index.js","webpack:///./src/line.js","webpack:///./src/logger.inner.js","webpack:///./src/logger.js","webpack:///./src/output.inner.js","webpack:///./src/output.js","webpack:///./src/text.js","webpack:///./src/utils.js"],"names":["require","getRandom","getRandomColorName","colors","length","getEnum","list","reduce","total","item","filterNonBlack","filter","color","ColorManager","control","foreground","background","Object","keys","name","black","white","printableColors","reset","getForegroundList","bright","dim","underscore","blink","reverse","hidden","red","green","yellow","blue","magenta","cyan","shoutme","window","logger","Line","columns","options","data","text","Text","full","push","empty","append","map","DEFAULT_COLUMNS","DEFAULT_TERMINAL_WIDTH","FILL_WITH_FORMAT","DEFAULT_OPTIONS","width","fillWithFormat","getColorByIndex","index","getColumnWidth","Math","floor","printLine","line","console","log","join","LoggerInner","colorManager","foreIndex","backIndex","columnWidth","restoreOutputOptions","output","setOptions","backName","assignBack","getRandomBackColorName","getBackgroundList","foreName","assignFore","getRandomForeColorName","back","getBackColor","fore","getForeColor","Output","isForeEqualToBack","compensateColor","str","appendLine","lines","forEach","compensate","value","addNewLine","formatText","addNewColumn","appendToColumn","Logger","restoreOptions","randomBackground","nextBackground","randomForeround","nextForeground","appendColumn","opts","OutputInner","createNewLine","lastLine","getLineToAppendLine","getLineToAppendColumn","addColumn","getColumnRemainder","max","fillColumn","repeat","getFilledText","gap","n","random"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const { getRandom } = require('./utils');\n\nconst getRandomColorName = (colors) => colors[getRandom(colors.length)];\n\nconst getEnum = (list) => list.reduce((total, item) => ({\n    ...total,\n    [item]: item,\n}), {});\n\nconst filterNonBlack = (colors) => colors.filter((color) => color !== 'black');\n\nclass ColorManager {\n    constructor({ control = [], foreground = [], background = [] } = {}) {\n        this.control = control;\n        this.foreground = foreground;\n        this.background = background;\n    }\n\n    get reset() {\n        return this.control.reset;\n    }\n\n    get colors() {\n        return getEnum(this.getForegroundList());\n    }\n\n    get printableColors() {\n        return getEnum(filterNonBlack(Object.keys(this.getForegroundList())));\n    }\n\n    getBackgroundList() {\n        return Object.keys(this.background);\n    }\n\n    getForegroundList() {\n        return Object.keys(this.foreground);\n    }\n\n    getForeColor(name = '') {\n        return this.foreground[name] || '';\n    }\n\n    getBackColor(name = '') {\n        return this.background[name] || '';\n    }\n\n    compensateColor(color) {\n        return color === this.colors.black ? this.colors.white : this.colors.black;\n    }\n\n    getRandomForeColorName() {\n        return getRandomColorName(Object.keys(this.printableColors));\n    }\n\n    getRandomBackColorName() {\n        return getRandomColorName(Object.keys(this.colors));\n    }\n}\n\nexport default ColorManager;\n","export const control = {\n    reset: '\\x1b[0m',\n    bright: '\\x1b[1m',\n    dim: '\\x1b[2m',\n    underscore: '\\x1b[4m',\n    blink: '\\x1b[5m',\n    reverse: '\\x1b[7m',\n    hidden: '\\x1b[8m',\n};\n\nexport const foreground = {\n    black: '\\x1b[30m',\n    red: '\\x1b[31m',\n    green: '\\x1b[32m',\n    yellow: '\\x1b[33m',\n    blue: '\\x1b[34m',\n    magenta: '\\x1b[35m',\n    cyan: '\\x1b[36m',\n    white: '\\x1b[37m',\n};\n\nexport const background = {\n    black: '\\x1b[40m',\n    red: '\\x1b[41m',\n    green: '\\x1b[42m',\n    yellow: '\\x1b[43m',\n    blue: '\\x1b[44m',\n    magenta: '\\x1b[45m',\n    cyan: '\\x1b[46m',\n    white: '\\x1b[47m',\n};\n","import shoutme from './logger';\n\nexport default shoutme;\n\nif (typeof window !== 'undefined' && typeof window === 'object') {\n    window['shoutme'] = logger;\n}\n","import Text from './text';\n\nclass Line {\n    constructor({ columns = 1 } = {}) {\n        this.options = { columns };\n        this.data = [];\n    }\n\n    get empty() {\n        return this.data.length === 0;\n    }\n\n    get columns() {\n        return this.options.columns;\n    }\n\n    get full() {\n        return this.data.length === this.columns;\n    }\n\n    get text() {\n        return this.data.map(({ data } = {}) => data);\n    }\n\n    addColumn(text = new Text()) {\n        return this.full ? false : this.data.push(text);\n    }\n\n    append(text = new Text()) {\n        return this.empty\n            ? this.data.push(text)\n            : this.data[this.data.length - 1].append(text);\n    }\n}\n\nexport default Line;\n","import * as colors from './colors.list';\nimport ColorManager from './color.manager';\nimport Text from './text';\n\nimport Output from './output';\n\nconst DEFAULT_COLUMNS = 3;\n\nconst DEFAULT_TERMINAL_WIDTH = 80;\n\nconst FILL_WITH_FORMAT = false;\n\nconst DEFAULT_OPTIONS = {\n    columns: DEFAULT_COLUMNS,\n    width: DEFAULT_TERMINAL_WIDTH,\n    fillWithFormat: FILL_WITH_FORMAT,\n};\n\nconst getColorByIndex = (colors = [], index = 0) => colors[index % colors.length];\n\nconst getColumnWidth = ({\n    width = DEFAULT_TERMINAL_WIDTH,\n    columns = DEFAULT_COLUMNS,\n} = {}) => Math.floor(width / columns);\n\nconst printLine = (line = [], options) => console.log(line.join(''));\n\nclass LoggerInner {\n    constructor({\n        control = colors.control,\n        foreground = colors.foreground,\n        background = colors.background,\n        options = DEFAULT_OPTIONS,\n    } = {}) {\n        this.colorManager = new ColorManager({ control, foreground, background });\n        this.reset();\n        this.foreIndex = 0;\n        this.backIndex = 0;\n        this.options = { ...options };\n        this.columnWidth = getColumnWidth(options);\n    }\n\n    get colors() {\n        return this.colorManager.colors;\n    }\n\n    setOptions(options = {}) {\n        this.options = { ...this.options, ...options };\n        this.restoreOutputOptions();\n    }\n\n    restoreOptions() {\n        this.options = { ...DEFAULT_OPTIONS };\n        this.restoreOutputOptions();\n    }\n\n    restoreOutputOptions() {\n        this.output.setOptions(this.options);\n    }\n\n    background(color = '') {\n        this.backName = color;\n        this.assignBack(color);\n        return this;\n    }\n\n    randomBackground() {\n        this.backName = this.colorManager.getRandomBackColorName();\n        this.assignBack(this.backName);\n        return this;\n    }\n\n    nextBackground() {\n        this.backName = getColorByIndex(this.colorManager.getBackgroundList(), this.backIndex);\n        this.assignBack(this.backName);\n        this.backIndex++;\n        return this;\n    }\n\n    foreground(color = '') {\n        this.foreName = color;\n        this.assignFore(color);\n        return this;\n    }\n\n    randomForeround() {\n        this.foreName = this.colorManager.getRandomForeColorName();\n        this.assignFore(this.foreName);\n        return this;\n    }\n\n    nextForeground() {\n        this.foreName = getColorByIndex(this.colorManager.getForegroundList(), this.foreIndex);\n        this.assignFore(this.foreName);\n        this.foreIndex++;\n        return this;\n    }\n\n    assignBack(color) {\n        this.back = this.colorManager.getBackColor(color);\n    }\n\n    assignFore(color) {\n        this.fore = this.colorManager.getForeColor(color);\n    }\n\n    reset() {\n        this.backName = '';\n        this.assignBack(this.backName);\n        this.foreName = 'white';\n        this.assignFore(this.foreName);\n        this.output = new Output(this.options);\n        return this;\n    }\n\n    isForeEqualToBack() {\n        return this.foreName === this.backName;\n    }\n\n    compensate() {\n        this.fore = this.isForeEqualToBack()\n            ? this.colorManager.getForeColor(this.colorManager.compensateColor(this.foreName))\n            : this.fore;\n    }\n\n    log(str = '') {\n        this.appendLine(str);\n        this.output.lines.forEach((line) => printLine(line, this.options));\n        this.reset();\n        return this;\n    }\n\n    formatText(str = '') {\n        this.compensate();\n\n        return new Text({\n            background: this.back,\n            foreground: this.fore,\n            reset: this.colorManager.reset,\n            columnWidth: this.columnWidth,\n            fillWithFormat: this.options.fillWithFormat,\n            value: str,\n        });\n    }\n\n    appendLine(str = '') {\n        this.output.addNewLine(this.formatText(str));\n        return this;\n    }\n\n    appendColumn(str = '') {\n        this.output.addNewColumn(this.formatText(str));\n        return this;\n    }\n\n    appendToColumn(str = '') {\n        this.output.appendToColumn(this.formatText(str));\n        return this;\n    }\n}\n\nexport default LoggerInner;\n","import LoggerInner from './logger.inner';\n\nclass Logger {\n    constructor() {\n        this.logger = new LoggerInner();\n    }\n\n    get colors() {\n        return this.logger.colors;\n    }\n\n    set options(opts = {}) {\n        this.logger.setOptions(opts);\n    }\n\n    restoreOptions() {\n        this.logger.restoreOptions();\n    }\n\n    background(color = '') {\n        this.logger.background(color);\n        return this;\n    }\n\n    randomBackground() {\n        this.logger.randomBackground(color);\n        return this;\n    }\n\n    nextBackground() {\n        this.logger.nextBackground();\n        return this;\n    }\n\n    foreground(color = '') {\n        this.logger.foreground(color);\n        return this;\n    }\n\n    randomForeround() {\n        this.logger.randomForeround();\n        return this;\n    }\n\n    nextForeground() {\n        this.logger.nextForeground();\n        return this;\n    }\n\n    log(str = '') {\n        this.logger.log(str);\n        return this;\n    }\n\n    appendLine(str = '') {\n        this.logger.appendLine(str);\n        return this;\n    }\n\n    appendColumn(str = '') {\n        this.logger.appendColumn(str);\n        return this;\n    }\n\n    appendToColumn(str = '') {\n        this.logger.appendToColumn(str);\n        return this;\n    }\n}\n\nexport default new Logger();\n","import Line from './line';\nimport Text from './text';\n\nclass OutputInner {\n    constructor(options = {}) {\n        this.options = options;\n        this.lines = [];\n        this.createNewLine();\n    }\n\n    get lastLine() {\n        return this.lines[this.lines.length - 1];\n    }\n\n    get text() {\n        return this.lines.map((line) => line.text);\n    }\n\n    setOptions(options = {}) {\n        this.options = { ...this.options, ...options };\n    }\n\n    createNewLine() {\n        this.lines.push(new Line(this.options));\n        return this.lastLine;\n    }\n\n    getLineToAppendLine() {\n        return this.lastLine.empty ? this.lastLine : this.createNewLine();\n    }\n\n    getLineToAppendColumn() {\n        return this.lastLine.full ? this.createNewLine() : this.lastLine;\n    }\n\n    addNewLine(text = new Text()) {\n        this.getLineToAppendLine().append(text);\n        return this;\n    }\n\n    addNewColumn(text = new Text()) {\n        this.getLineToAppendColumn().addColumn(text);\n        return this;\n    }\n\n    appendToColumn(text = new Text()) {\n        this.getLineToAppendColumn().append(text);\n        return this;\n    }\n}\n\nexport default OutputInner;\n","import OutputInner from './output.inner';\n\nclass Output {\n    constructor(options) {\n        this.output = new OutputInner(options);\n    }\n\n    get lines() {\n        return this.output.text;\n    }\n\n    setOptions(options) {\n        return this.output.setOptions(options);\n    }\n\n    addNewLine(text) {\n        this.output.addNewLine(text);\n        return this;\n    }\n\n    addNewColumn(text) {\n        this.output.addNewColumn(text);\n        return this;\n    }\n\n    appendToColumn(text) {\n        this.output.appendToColumn(text);\n        return this;\n    }\n}\n\nexport default Output;\n","const getColumnRemainder = (length, width = 0) => Math.max(width - length, 0);\n\nconst fillColumn = ({ length = 0 } = {}, width) => ' '.repeat(getColumnRemainder(length, width));\n\nconst getFilledText = ({\n    value,\n    reset,\n    gap,\n    fillWithFormat,\n}) => fillWithFormat ? `${value}${gap}${reset}` : `${value}${reset}${gap}`;\n\nclass Text {\n    constructor({\n        background = '',\n        foreground = '',\n        reset = '',\n        value = '',\n        columnWidth,\n        fillWithFormat = false,\n    } = {}) {\n        this.background = background;\n        this.foreground = foreground;\n        this.reset = reset;\n        this.value = value;\n        this.columnWidth = columnWidth;\n        this.fillWithFormat = fillWithFormat;\n    }\n\n    get gap() {\n        return fillColumn(this.value, this.columnWidth);\n    }\n\n    get data() {\n        return `${this.background}${this.foreground}${getFilledText({\n            value: this.value,\n            reset: this.reset,\n            gap: this.gap,\n            fillWithFormat: this.fillWithFormat,\n        })}`;\n    }\n\n    append({ value = '' } = {}) {\n        this.value += value;\n    }\n}\n\nexport default Text;\n","export const getRandom = (n) => Math.floor(Math.random() * n);\n"],"sourceRoot":""}